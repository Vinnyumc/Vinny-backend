name: CI/CD to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  ECR_REGISTRY: 912394945783.dkr.ecr.ap-northeast-2.amazonaws.com
  ECR_REPOSITORY: vinny-project
  IMAGE_TAG: latest
  AWS_REGION: ap-northeast-2

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ‚úÖ Checkout code
        uses: actions/checkout@v4

      - name: üîê Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: üê≥ Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION \
          | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: üì¶ Build and Push Docker image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: üöÄ Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            docker stop vinny-app || true
            docker rm vinny-app || true
            docker run -d --restart always \
              --name vinny-app \
              --env-file /home/ubuntu/.env \
              -p 8080:8080 \
              $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
