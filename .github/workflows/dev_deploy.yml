name: Vinny Docker CI/CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Make application.yml  # application.yml 파일 생성 (운영용)
        run: |
          echo "${{ secrets.APPLICATION_YML }}" > ./src/main/resources/application.yml
        shell: bash

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t vinny:latest .

      - name: Save Docker image as tar
        run: docker save vinny:latest -o vinny-latest.tar

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: vinny-image
          path: vinny-latest.tar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: vinny-image
          path: .

      - name: Deploy to EC2 without DockerHub
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo "$EC2_SSH_KEY" > private_key.pem
          chmod 600 private_key.pem

          # Docker image tar 전송
          scp -i private_key.pem -o StrictHostKeyChecking=no vinny-latest.tar $EC2_USERNAME@$EC2_HOST:/home/$EC2_USERNAME/

          # EC2에서 docker load + compose 실행
          ssh -i private_key.pem -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST "
          set -ex
          cd ~/Vinny-backend
          docker compose down
          docker load -i ~/vinny-latest.tar
          docker compose up -d
          "



          rm -f private_key.pem